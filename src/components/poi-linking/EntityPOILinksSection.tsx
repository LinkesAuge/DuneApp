// Entity POI Links Section\n// Shows all POIs where a specific entity can be found\n\nimport React, { useState, useEffect } from 'react';\nimport { \n  MapPin, \n  Package, \n  FileText, \n  ExternalLink, \n  Plus, \n  Edit,\n  Trash,\n  Loader2,\n  ChevronDown,\n  ChevronRight\n} from 'lucide-react';\nimport { Entity, POIEntityLinkWithDetails } from '../../types/unified-entities';\nimport { poiEntityLinksAPI } from '../../lib/api/poi-entity-links';\nimport { useAuth } from '../auth/AuthProvider';\n\ninterface EntityPOILinksSectionProps {\n  entity: Entity;\n  className?: string;\n  showLinkButton?: boolean;\n  canEdit?: boolean;\n  onLinksChanged?: () => void;\n}\n\nconst EntityPOILinksSection: React.FC<EntityPOILinksSectionProps> = ({\n  entity,\n  className = '',\n  showLinkButton = true,\n  canEdit = true,\n  onLinksChanged\n}) => {\n  const { user } = useAuth();\n  \n  // State management\n  const [poiLinks, setPoiLinks] = useState<POIEntityLinkWithDetails[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [haggaBasinExpanded, setHaggaBasinExpanded] = useState(true);\n  const [deepDesertExpanded, setDeepDesertExpanded] = useState(true);\n  const [editingLink, setEditingLink] = useState<string | null>(null);\n  const [editQuantity, setEditQuantity] = useState<number>(1);\n  const [editNotes, setEditNotes] = useState<string>('');\n\n  // Load POI links for this entity\n  useEffect(() => {\n    loadPOILinks();\n  }, [entity.id]);\n\n  const loadPOILinks = async () => {\n    try {\n      setLoading(true);\n      const links = await poiEntityLinksAPI.getEntityPOILinks(entity.id);\n      setPoiLinks(links);\n    } catch (error) {\n      console.error('Failed to load POI links:', error);\n      setPoiLinks([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle links updated\n  const handleLinksUpdated = () => {\n    loadPOILinks();\n    onLinksChanged?.();\n  };\n\n  // Filter POIs by map type\n  const haggaBasinPOIs = poiLinks.filter(link => link.poi && link.poi.map_type === 'hagga_basin');\n  const deepDesertPOIs = poiLinks.filter(link => link.poi && link.poi.map_type === 'deep_desert');\n\n  // Handle link editing\n  const startEditingLink = (link: POIEntityLinkWithDetails) => {\n    setEditingLink(`${link.poi_id}-${link.entity_id}`);\n    setEditQuantity(link.quantity);\n    setEditNotes(link.notes || '');\n  };\n\n  const cancelEditingLink = () => {\n    setEditingLink(null);\n    setEditQuantity(1);\n    setEditNotes('');\n  };\n\n  const saveEditingLink = async (poiId: string, entityId: string) => {\n    try {\n      await poiEntityLinksAPI.updatePOIEntityLink(poiId, entityId, {\n        quantity: editQuantity,\n        notes: editNotes.trim() || undefined\n      });\n      \n      setEditingLink(null);\n      loadPOILinks();\n      onLinksChanged?.();\n    } catch (error) {\n      console.error('Failed to update POI link:', error);\n    }\n  };\n\n  // Handle link deletion\n  const removePOILink = async (poiId: string, entityId: string) => {\n    if (!confirm('Are you sure you want to remove this POI link?')) return;\n    \n    try {\n      await poiEntityLinksAPI.unlinkEntityFromPOI(poiId, entityId);\n      loadPOILinks();\n      onLinksChanged?.();\n    } catch (error) {\n      console.error('Failed to remove POI link:', error);\n    }\n  };\n\n  // Navigate to POI on map\n  const navigateToPOI = (poi: any) => {\n    const mapPath = poi.map_type === 'hagga_basin' ? '/hagga-basin' : '/grid';\n    window.open(`${mapPath}?poi=${poi.id}`, '_blank');\n  };\n\n  // Render POI card\n  const renderPOICard = (link: POIEntityLinkWithDetails) => {\n    if (!link.poi) return null;\n    \n    const poi = link.poi;\n    const isEditing = editingLink === `${link.poi_id}-${link.entity_id}`;\n    const mapTypeName = poi.map_type === 'hagga_basin' ? 'Hagga Basin' : 'Deep Desert';\n\n    return (\n      <div \n        key={`${link.poi_id}-${link.entity_id}`}\n        className=\"bg-slate-700/30 rounded-lg border border-slate-600/50 p-4 hover:bg-slate-700/50 transition-colors\"\n      >\n        <div className=\"flex items-start justify-between\">\n          <div className=\"flex items-start gap-3 flex-1\">\n            {/* POI Icon */}\n            <div className=\"w-10 h-10 flex items-center justify-center rounded-lg bg-slate-700 border border-slate-600 flex-shrink-0\">\n              <MapPin className=\"w-5 h-5 text-amber-300\" />\n            </div>\n            \n            <div className=\"flex-1 min-w-0\">\n              {/* POI Name and Actions */}\n              <div className=\"flex items-center gap-2 mb-2\">\n                <h4 className=\"font-medium text-amber-100 truncate\"\n                    style={{ fontFamily: \"'Trebuchet MS', 'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', Tahoma, sans-serif\" }}>\n                  {poi.title}\n                </h4>\n                <button\n                  onClick={() => navigateToPOI(poi)}\n                  className=\"p-1 text-amber-200/60 hover:text-amber-200 transition-colors flex-shrink-0\"\n                  title=\"View POI on map\"\n                >\n                  <ExternalLink className=\"w-3 h-3\" />\n                </button>\n              </div>\n              \n              {/* POI Metadata */}\n              <div className=\"flex flex-wrap gap-2 mb-2\">\n                <span className=\"text-xs px-2 py-1 bg-slate-600/50 text-amber-200/80 rounded border border-slate-600\">\n                  {mapTypeName}\n                </span>\n                \n                {poi.coordinate && (\n                  <span className=\"text-xs px-2 py-1 bg-slate-600/50 text-amber-200/80 rounded border border-slate-600\">\n                    {poi.coordinate}\n                  </span>\n                )}\n              </div>\n\n              {/* Link Details */}\n              <div className=\"bg-slate-800/50 rounded-lg p-3 mb-2\">\n                {isEditing ? (\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center gap-2\">\n                      <label className=\"text-xs text-amber-200/80 min-w-0 flex-shrink-0\">Quantity:</label>\n                      <input\n                        type=\"number\"\n                        min=\"1\"\n                        value={editQuantity}\n                        onChange={(e) => setEditQuantity(parseInt(e.target.value) || 1)}\n                        className=\"w-20 px-2 py-1 text-xs bg-slate-700 border border-slate-600 rounded text-amber-100 focus:outline-none focus:border-amber-500\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-xs text-amber-200/80 mb-1\">Notes:</label>\n                      <input\n                        type=\"text\"\n                        placeholder=\"Optional notes...\"\n                        value={editNotes}\n                        onChange={(e) => setEditNotes(e.target.value)}\n                        className=\"w-full px-2 py-1 text-xs bg-slate-700 border border-slate-600 rounded text-amber-100 placeholder-amber-200/30 focus:outline-none focus:border-amber-500\"\n                      />\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                      <button\n                        onClick={() => saveEditingLink(link.poi_id, link.entity_id)}\n                        className=\"px-2 py-1 text-xs bg-amber-600 hover:bg-amber-500 text-white rounded transition-colors\"\n                      >\n                        Save\n                      </button>\n                      <button\n                        onClick={cancelEditingLink}\n                        className=\"px-2 py-1 text-xs text-amber-200 hover:text-amber-100 transition-colors\"\n                      >\n                        Cancel\n                      </button>\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"text-xs space-y-1\">\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-amber-200/60\">Quantity:</span>\n                      <span className=\"text-amber-200 font-medium\">{link.quantity}</span>\n                    </div>\n                    {link.notes && (\n                      <div className=\"flex items-start justify-between\">\n                        <span className=\"text-amber-200/60 flex-shrink-0 mr-2\">Notes:</span>\n                        <span className=\"text-amber-200/80 text-right\">{link.notes}</span>\n                      </div>\n                    )}\n                    {link.assignment_source && (\n                      <div className=\"flex items-center justify-between\">\n                        <span className=\"text-amber-200/60\">Source:</span>\n                        <span className=\"text-amber-200/60 capitalize\">{link.assignment_source.replace('_', ' ')}</span>\n                      </div>\n                    )}\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n\n          {/* Actions */}\n          {canEdit && !isEditing && (\n            <div className=\"flex items-center gap-1 ml-2\">\n              <button\n                onClick={() => startEditingLink(link)}\n                className=\"p-1 text-amber-200/60 hover:text-amber-200 transition-colors\"\n                title=\"Edit link\"\n              >\n                <Edit className=\"w-3 h-3\" />\n              </button>\n              <button\n                onClick={() => removePOILink(link.poi_id, link.entity_id)}\n                className=\"p-1 text-red-400/60 hover:text-red-400 transition-colors\"\n                title=\"Remove link\"\n              >\n                <Trash className=\"w-3 h-3\" />\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  // Loading state\n  if (loading) {\n    return (\n      <div className={`${className}`}>\n        <div className=\"flex items-center justify-center py-8\">\n          <Loader2 className=\"w-6 h-6 text-amber-300 animate-spin\" />\n          <span className=\"ml-2 text-amber-200\">Loading POI locations...</span>\n        </div>\n      </div>\n    );\n  }\n\n  const hasHaggaBasinPOIs = haggaBasinPOIs.length > 0;\n  const hasDeepDesertPOIs = deepDesertPOIs.length > 0;\n  const hasLinkedPOIs = hasHaggaBasinPOIs || hasDeepDesertPOIs;\n\n  return (\n    <div className={`${className}`}>\n      {/* Header */}\n      <h3 className=\"text-lg font-semibold text-amber-100 flex items-center gap-2 mb-4\"\n          style={{ fontFamily: \"'Trebuchet MS', 'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', Tahoma, sans-serif\" }}>\n        <MapPin className=\"w-5 h-5\" />\n        Found At Locations\n      </h3>\n\n      {/* Content */}\n      {!hasLinkedPOIs ? (\n        <div className=\"text-center py-8\">\n          <MapPin className=\"w-12 h-12 text-amber-300/40 mx-auto mb-4\" />\n          <p className=\"text-amber-200/60\">This entity is not linked to any POI locations yet</p>\n        </div>\n      ) : (\n        <div className=\"space-y-6\">\n          {/* Hagga Basin POIs */}\n          {hasHaggaBasinPOIs && (\n            <div>\n              <button\n                onClick={() => setHaggaBasinExpanded(!haggaBasinExpanded)}\n                className=\"flex items-center gap-2 text-amber-200 hover:text-amber-100 transition-colors mb-3\"\n              >\n                {haggaBasinExpanded ? <ChevronDown className=\"w-4 h-4\" /> : <ChevronRight className=\"w-4 h-4\" />}\n                <MapPin className=\"w-4 h-4\" />\n                <span className=\"font-medium\">Hagga Basin ({haggaBasinPOIs.length})</span>\n              </button>\n              \n              {haggaBasinExpanded && (\n                <div className=\"space-y-3 ml-6\">\n                  {haggaBasinPOIs.map(renderPOICard)}\n                </div>\n              )}\n            </div>\n          )}\n\n          {/* Deep Desert POIs */}\n          {hasDeepDesertPOIs && (\n            <div>\n              <button\n                onClick={() => setDeepDesertExpanded(!deepDesertExpanded)}\n                className=\"flex items-center gap-2 text-amber-200 hover:text-amber-100 transition-colors mb-3\"\n              >\n                {deepDesertExpanded ? <ChevronDown className=\"w-4 h-4\" /> : <ChevronRight className=\"w-4 h-4\" />}\n                <MapPin className=\"w-4 h-4\" />\n                <span className=\"font-medium\">Deep Desert ({deepDesertPOIs.length})</span>\n              </button>\n              \n              {deepDesertExpanded && (\n                <div className=\"space-y-3 ml-6\">\n                  {deepDesertPOIs.map(renderPOICard)}\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default EntityPOILinksSection; 